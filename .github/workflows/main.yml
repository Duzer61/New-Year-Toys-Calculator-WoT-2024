name: Main collider workflow

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./calculator/
          push: true
          tags: duzer61/calculator:latest

  build_nginx_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: duzer61/calculator_nginx:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_nginx_and_push_to_docker_hub
    steps:
    - name: Set environment variables
      run: |
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Copy docker-compose.calc-production.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose-calc.production.yml"
        target: "calculator"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd calculator
          sudo docker compose -f docker-compose-calc.production.yml pull
          sudo docker compose -f docker-compose-calc.production.yml down
          sudo docker compose -f docker-compose-calc.production.yml up -d
          sudo docker compose -f docker-compose-calc.production.yml exec calculator python manage.py migrate
          sudo docker compose -f docker-compose-calc.production.yml exec calculator python manage.py collectstatic
          sudo docker compose -f docker-compose-calc.production.yml exec calculator cp -r /calculator_app/staticfiles/. /staticfiles/static/
          sudo docker compose -f docker-compose-calc.production.yml exec calculator cp -r /calculator_app/staticfiles/. /staticfiles/static/
          sudo docker compose -f docker-compose-calc.production.yml exec calculator cp -r /calculator_app/static/. /staticfiles/static/
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой calculator успешно выполнен!